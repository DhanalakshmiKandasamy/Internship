package bigdataanalytics;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;    
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ETPL-T4    
 */
public class regression extends javax.swing.JFrame {
    Connection con;
    Statement stmt,st1;
    ResultSet rs;
    String bmi;
    public static int stat;
    PreparedStatement ps,ps1;
    String u_name = "root";
    String u_pwd = "";
    String URL = "jdbc:mysql://localhost:3306/"; 
    String databaseName = "treatment";  
    int bavg,aavg,favg;
    /**
     * Creates new form regression
     */
    public regression() {
        initComponents();     
        
              try {  
           Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection(URL + databaseName, u_name, u_pwd);
            stmt=con.createStatement();
          //  st.executeUpdate("Truncate table `status`");
          //  st.executeUpdate("Truncate table `follow`");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jTable1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jButton1.setText(" Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Baysian Rule based Mining Data");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    

              
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        
      try
       {
            stmt = con.createStatement();
           int tot=0,count=0,avg;
            ResultSet rs = stmt.executeQuery("SELECT * from preprocess"); 
            while(rs.next())
            {
               tot=tot+Integer.parseInt(rs.getString(2)); 
               count++;
            }
            System.out.println("total"+tot);
            System.out.println("count"+count);  
            avg=tot/count;
            System.out.println("Avg" + avg);
            rs.close();
            bavg=avg;
       }
       catch(Exception e)
       {
           System.out.println(e.getMessage());
       }
       try
       {
            st1= con.createStatement();
           int tot1=0,count1=0,avg1;
            ResultSet rs1 = st1.executeQuery("SELECT * from preprocess"); 
            while(rs1.next())
            {
               tot1=tot1+Integer.parseInt(rs1.getString(9));
               count1++;
            }
            System.out.println("total"+tot1);
            System.out.println("count"+count1);
            avg1=tot1/count1;
            System.out.println("Avg" + avg1);
            rs1.close();
            aavg=avg1;
       }
        catch(Exception e)
       {
           System.out.println(e.getMessage());
       }
       try
       {
           Statement st2 = con.createStatement();
           int tot2=0,count2=0,avg2;
            ResultSet rs2 = st2.executeQuery("SELECT * from preprocess"); 
            while(rs2.next())
            {
               tot2=tot2+Integer.parseInt(rs2.getString(10)); 
               count2++;
            }
            System.out.println("total"+tot2);
            System.out.println("count"+count2);
            avg2=tot2/count2;
            System.out.println("Avg" + avg2);  
            rs2.close();
            favg=avg2;
       }
       catch(Exception e)
       {
           System.out.println(e.getMessage());
       }
        try{
            DefaultTableModel model=new DefaultTableModel();  
             
            model.addColumn("Sno");    
            model.addColumn("Network");
            model.addColumn("Type");
            model.addColumn("Source");
            model.addColumn("Destinations");
            model.addColumn("Noofstations");  
            model.addColumn("Base1");
            model.addColumn("Base2");
            model.addColumn("Base3");
            model.addColumn("Remarks"); 
           
            jTable1.setModel(model);
             stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM patientdetails");
            
             int i2=0;
             int k=0;
            int id=1;
             
            
            while(rs.next()){
                
                model.insertRow(i2, new Object[]{""});
                String name=rs.getString(1);
                int a=Integer.parseInt(rs.getString(2));
                int b=Integer.parseInt(rs.getString(3));
                int c=Integer.parseInt(rs.getString(4));
                int d=Integer.parseInt(rs.getString(5));
                int e=Integer.parseInt(rs.getString(6));
                float f=Float.parseFloat(rs.getString(7));
                float g=Float.parseFloat(rs.getString(8)); 
               int h=Integer.parseInt(rs.getString(9));
               int i=Integer.parseInt(rs.getString(10));
                             
                if((bavg<a || aavg>h || favg>i))
                {
                    
             model.insertRow(i2, new Object[]{""});
             model.setValueAt(name, i2, 0);
              model.setValueAt(a, i2, 1);
                model.setValueAt(b, i2, 2);
                model.setValueAt(c, i2, 3);
                model.setValueAt(d, i2, 4);
                model.setValueAt(e, i2, 5);
                model.setValueAt(f, i2, 6);
                model.setValueAt(g, i2, 7);   
                model.setValueAt(h, i2, 8);
                model.setValueAt(i, i2, 9);  
                i2++;
                ps=con.prepareStatement("insert into preprocess values(?,?,?,?,?,?,?,?,?,?,?)");
                ps.setString(1, name);
                ps.setInt(2, a);
                ps.setInt(3, b);
                ps.setInt(4, c);
                ps.setInt(5, d);
                ps.setInt(6, e);
                ps.setFloat(7, f);
                ps.setFloat(8, g);
                ps.setInt(9, h);
                ps.setInt(10, i);
                ps.setInt(11,id);
                ps.executeUpdate();
                k++;
               id++;               }
                else
                {
                    ps1=con.prepareStatement("insert into preprocess values(?,?,?,?,?,?,?,?,?,?)");
                ps1.setString(1, name); 
                ps1.setInt(2, a);
                ps1.setInt(3, b); 
                ps1.setInt(4, c);
                ps1.setInt(5, d);
                ps1.setInt(6, e);
                ps1.setFloat(7, f);
                ps1.setFloat(8, g);
                ps1.setInt(9, h); 
                ps1.setInt(10, i);
                ps1.executeUpdate();
               
                }          
         
            }
                   
               
            System.out.println("\n Tables"+i2);
             System.out.println("Inserted Successfully");
                    JOptionPane.showMessageDialog(this, "Patient Report Inserted Successfully");
            jTextField1.setText(""+k);
            stat=k;
                      }
        catch(Exception e){
            System.out.println(e.getMessage());    
            e.printStackTrace();
        }       
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(regression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(regression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(regression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(regression.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new regression().setVisible(true);      
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
